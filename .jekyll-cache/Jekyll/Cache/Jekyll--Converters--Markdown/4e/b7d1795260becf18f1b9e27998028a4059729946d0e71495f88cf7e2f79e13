I"&<h3 id="normal-flow">Normal flow</h3>
<ul>
  <li>默认情况下，元素都是按照normal flow（标准流、常规流、正常流、文档流【document flow】）进行定位</li>
  <li>从上到下、从左到右按顺序摆放好</li>
  <li>默认情况下，互相之间不存在层叠现象</li>
</ul>

<h3 id="position">position</h3>

<p>利用position可以对元素进行定位，常用取值有4个</p>
<h4 id="static静态定位">static：静态定位</h4>
<ul>
  <li>position属性的默认值</li>
  <li>元素按照normal flow布局</li>
  <li>left 、right、top、bottom没有任何作用</li>
</ul>

<h4 id="relative相对定位">relative：相对定位</h4>
<ul>
  <li>元素按照normal flow布局</li>
  <li>可以通过left、right、top、bottom进行定位</li>
  <li>定位参照对象是元素<strong>自己原来的位置</strong></li>
  <li>相对定位的应用场景</li>
  <li>在不影响其他元素位置的前提下，对当前元素位置进行微调</li>
  <li>sub、sup元素分别用于设置上标和下标</li>
</ul>

<h4 id="fixed固定定位">fixed：固定定位</h4>
<ul>
  <li>元素脱离normal flow（脱离标准流、脱标）</li>
  <li>可以通过left、right、top、bottom进行定位</li>
  <li>定位参照对象是<strong>视口（viewport）</strong></li>
  <li>当画布滚动时，固定不动</li>
</ul>

<h3 id="脱标元素的特点fixedabsolute">脱标元素的特点(fixed/absolute)</h3>
<ul>
  <li>可以随意设置宽高</li>
  <li>宽高默认由内容决定</li>
  <li>不再受标准流的约束
    <ul>
      <li>不再严格按照从上到下、从左到右排布</li>
      <li>不再严格区分块级、行内级，块级、行内级的很多特性都会消失</li>
    </ul>
  </li>
  <li>不再给父元素汇报宽高数据</li>
  <li>脱标元素内部默认还是按照标准流布局</li>
</ul>

<h4 id="absolute绝对定位">absolute：绝对定位</h4>

<ul>
  <li>元素脱离normal flow（脱离标准流、脱标）</li>
  <li>可以通过left、right、top、bottom进行定位
    <ul>
      <li>定位参照对象是<strong>最邻近的定位祖先元素</strong></li>
      <li>如果找不到这样的祖先元素，参照对象是<strong>视口</strong></li>
    </ul>
  </li>
  <li>定位元素（positioned element）
    <ul>
      <li>position值<strong>不为static的元素</strong></li>
      <li>也就是position值为relative、absolute、fixed的元素</li>
    </ul>
  </li>
</ul>

<h4 id="absolute子绝父相">absolute：子绝父相</h4>
<ul>
  <li>
    <p>在绝大数情况下，子元素的绝对定位都是相对于父元素进行定位</p>
  </li>
  <li>
    <p>如果希望子元素相对于父元素进行定位，又不希望父元素脱标，常用解决方案是：</p>
    <ul>
      <li>父元素设置position: relative（让父元素成为定位元素，而且父元素不脱离标准流）</li>
      <li>子元素设置position: absolute</li>
      <li>简称为“子绝父相”</li>
    </ul>
  </li>
</ul>

<h4 id="绝对定位技巧">绝对定位技巧</h4>

<ul>
  <li>绝对定位元素（absolutely positioned element）
    <ul>
      <li>position值为absolute或者fixed的元素</li>
    </ul>
  </li>
  <li>对于绝对定位元素来说
    <ul>
      <li>定位参照对象的宽度 = left + right + margin-left + margin-right + 绝对定位元素的实际占用宽度</li>
      <li>定位参照对象的高度 = top + bottom + margin-top + margin-bottom + 绝对定位元素的实际占用高度</li>
    </ul>
  </li>
  <li>如果希望绝对定位元素的宽高和定位参照对象一样，可以给绝对定位元素设置以下属性
    <ul>
      <li>left: 0、right: 0、top: 0、bottom: 0、margin:0</li>
    </ul>
  </li>
  <li>如果希望绝对定位元素在定位参照对象中居中显示，可以给绝对定位元素设置以下属性
    <ul>
      <li>left: 0、right: 0、top: 0、bottom: 0、margin: auto</li>
      <li>另外，还得设置具体的宽高值（宽高小于定位参照对象的宽高）</li>
    </ul>
  </li>
</ul>

<h3 id="position总结">position总结</h3>

<table>
  <thead>
    <tr>
      <th style="text-align: left"> </th>
      <th style="text-align: center">脱离标准流</th>
      <th style="text-align: right">定位元素</th>
      <th style="text-align: center">绝对定位元素</th>
      <th style="text-align: center">定位参照对象</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">static – 静态定位</td>
      <td style="text-align: center">×</td>
      <td style="text-align: right">×</td>
      <td style="text-align: center">×</td>
      <td style="text-align: center">×</td>
    </tr>
    <tr>
      <td style="text-align: left">relative – 相对定位</td>
      <td style="text-align: center">x</td>
      <td style="text-align: right">√</td>
      <td style="text-align: center">x</td>
      <td style="text-align: center">元素自己原来的位置</td>
    </tr>
    <tr>
      <td style="text-align: left">absolute – 绝对定位</td>
      <td style="text-align: center">√</td>
      <td style="text-align: right">√</td>
      <td style="text-align: center">√</td>
      <td style="text-align: center">最邻近的定位祖先元素（如果找不到这样的祖先元素，参照对象是视口）</td>
    </tr>
    <tr>
      <td style="text-align: left">fixed – 固定定位</td>
      <td style="text-align: center">√</td>
      <td style="text-align: right">√</td>
      <td style="text-align: center">√</td>
      <td style="text-align: center">视口</td>
    </tr>
  </tbody>
</table>

<h3 id="css属性---z-index">CSS属性 - z-index</h3>

<ul>
  <li>z-index属性用来设置定位元素的层叠顺序（仅对定位元素有效）
    <ul>
      <li>取值可以是正整数、负整数、0</li>
    </ul>
  </li>
  <li>比较原则
    <ul>
      <li>如果是兄弟关系
        <ul>
          <li>z-index越大，层叠在越上面</li>
          <li>z-index相等，写在后面的那个元素层叠在上面</li>
        </ul>
      </li>
      <li>如果不是兄弟关系
        <ul>
          <li>各自从元素自己以及祖先元素中，找出最邻近的2个定位元素进行比较</li>
          <li>而且这2个定位元素必须有设置z-index的具体数值</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

:ET